NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'R0') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 4 
NUMBER OF USED VARIABLES : 33 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.        READ R1 0            /* line 5 */
	2.        READ R2 0            /* line 6 */
	3.        SUBI R6 R1 #0        /* line 8 */
	4.        SGT R6 0
	5.        ANDB R6 R6 R6 
	6.        BEQ L7
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 15 
	1.        MOVA R7 _c           /* line 10 */
	2.        ADDI R8 R0 #1 
	3.        ADD (R7) R0 R8 
	4.        MOVA R9 _d           /* line 11 */
	5.        ADD (R9) R0 R1 
	6.        MOVA R10 _c          /* line 12 */
	7.        ADD R11 R0 (R10) 
	8.        MOVA R12 _d
	9.        ADD R13 R0 (R12) 
	10.        ADD R14 R11 R13 
	11.        ADD R15 R14 R2 
	12.        MOVA R16 _c
	13.        ADDI R16 R16 #1 
	14.        ADD (R16) R0 R15 
	15.        BT L8                /* line 14 */
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 13 
	1.  L7    MOVA R17 _c          /* line 16 */
	2.        ADD (R17) R0 R1 
	3.        ADD R18 R1 R2        /* line 17 */
	4.        MOVA R19 _d
	5.        ADD (R19) R0 R18 
	6.        MOVA R20 _c          /* line 18 */
	7.        ADD R21 R0 (R20) 
	8.        MOVA R22 _d
	9.        ADD R23 R0 (R22) 
	10.        SUB R24 R21 R23 
	11.        MOVA R25 _c
	12.        ADDI R25 R25 #1 
	13.        ADD (R25) R0 R24 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 14 
	1.  L8    MOVA R26 _c          /* line 21 */
	2.        ADD R27 R0 (R26) 
	3.        ADD R3 R0 R27 
	4.        MOVA R28 _c          /* line 22 */
	5.        ADDI R28 R28 #1 
	6.        ADD R29 R0 (R28) 
	7.        ADD R4 R0 R29 
	8.        MOVA R30 _d          /* line 23 */
	9.        ADD R31 R0 (R30) 
	10.        ADD R5 R0 R31 
	11.        WRITE R3 0           /* line 24 */
	12.        WRITE R4 0           /* line 25 */
	13.        WRITE R5 0           /* line 26 */
	14.        HALT                 /* line 28 */
**************************


