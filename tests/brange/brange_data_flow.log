NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'R0') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 1 
NUMBER OF USED VARIABLES : 7 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 9 
	1.        READ R1 0            /* line 3 */
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        SHRI R3 R1 #2        /* line 5 */
			DEFS = [R3, PSW]
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = [R3, R1]
	3.        STORE R1 _v
			DEFS = []
			USES = [R1]
			LIVE IN = [R3, R1]
			LIVE OUT = [R3]
	4.        ANDBI R4 R3 #2047 
			DEFS = [R4, PSW]
			USES = [R3]
			LIVE IN = [R3]
			LIVE OUT = [R4]
	5.        ADDI R5 R4 #42 
			DEFS = [R5, PSW]
			USES = [R4]
			LIVE IN = [R4]
			LIVE OUT = [R5]
	6.        ADD R2 R0 R5 
			DEFS = [R2, PSW]
			USES = [R0, R5]
			LIVE IN = [R5]
			LIVE OUT = [R2]
	7.        WRITE R2 0           /* line 7 */
			DEFS = []
			USES = [R2]
			LIVE IN = [R2]
			LIVE OUT = [R2]
	8.        STORE R2 _r
			DEFS = []
			USES = [R2]
			LIVE IN = [R2]
			LIVE OUT = []
	9.        HALT 
			DEFS = []
			USES = []
			LIVE IN = []
			LIVE OUT = []
**************************


