NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'R0') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 6 
NUMBER OF USED VARIABLES : 6 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 2 
	1.        READ R1 0            /* line 2 */
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        STORE R1 _x
			DEFS = []
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = []
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.  L1    LOAD R1 _x
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        SUBI R2 R1 #0        /* line 4 */
			DEFS = [R2, PSW]
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = [PSW, R1]
	3.        STORE R1 _x
			DEFS = []
			USES = [R1]
			LIVE IN = [PSW, R1]
			LIVE OUT = [PSW]
	4.        SGT R2 0
			DEFS = [R2, PSW]
			USES = [PSW]
			LIVE IN = [PSW]
			LIVE OUT = [R2]
	5.        ANDB R2 R2 R2 
			DEFS = [R2, PSW]
			USES = [R2, R2]
			LIVE IN = [R2]
			LIVE OUT = [PSW]
	6.        BEQ L2
			DEFS = []
			USES = [PSW]
			LIVE IN = [PSW]
			LIVE OUT = []
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 6 
	1.        LOAD R1 _x
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        SUBI R3 R1 #20       /* line 5 */
			DEFS = [R3, PSW]
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = [PSW, R1]
	3.        STORE R1 _x
			DEFS = []
			USES = [R1]
			LIVE IN = [PSW, R1]
			LIVE OUT = [PSW]
	4.        SEQ R3 0
			DEFS = [R3, PSW]
			USES = [PSW]
			LIVE IN = [PSW]
			LIVE OUT = [R3]
	5.        ANDB R3 R3 R3 
			DEFS = [R3, PSW]
			USES = [R3, R3]
			LIVE IN = [R3]
			LIVE OUT = [PSW]
	6.        BEQ L3
			DEFS = []
			USES = [PSW]
			LIVE IN = [PSW]
			LIVE OUT = []
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.        BT L2                /* line 6 */
			DEFS = []
			USES = []
			LIVE IN = []
			LIVE OUT = []
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  L3    LOAD R1 _x
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        SUBI R4 R1 #1        /* line 8 */
			DEFS = [R4, PSW]
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = [R4]
	3.        ADD R1 R0 R4 
			DEFS = [R1, PSW]
			USES = [R0, R4]
			LIVE IN = [R4]
			LIVE OUT = [R1]
	4.        STORE R1 _x
			DEFS = []
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = []
	5.        BT L1                /* line 9 */
			DEFS = []
			USES = []
			LIVE IN = []
			LIVE OUT = []
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 4 
	1.  L2    LOAD R1 _x
			DEFS = [R1]
			USES = []
			LIVE IN = []
			LIVE OUT = [R1]
	2.        WRITE R1 0           /* line 11 */
			DEFS = []
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = [R1]
	3.        STORE R1 _x
			DEFS = []
			USES = [R1]
			LIVE IN = [R1]
			LIVE OUT = []
	4.        HALT 
			DEFS = []
			USES = []
			LIVE IN = []
			LIVE OUT = []
**************************


