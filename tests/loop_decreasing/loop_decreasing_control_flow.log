NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'R0') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 5 
NUMBER OF USED VARIABLES : 9 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.        BT L3                /* line 3 */
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 1 
	1.  L4    SUB R1 R1 R2 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 2 
	1.  L3    SUBI R0 R1 #0 
	2.        BLE L5
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 10 
	1.        READ R3 0            /* line 4 */
	2.        ADDI R4 R2 #5        /* line 5 */
	3.        ADD R2 R0 R4 
	4.        WRITE R2 0           /* line 6 */
	5.        SUBI R5 R3 #32       /* line 7 */
	6.        SGT R5 0
	7.        SUBI R6 R2 #50 
	8.        SLT R6 0
	9.        ANDL R7 R5 R6 
	10.        BNE L4
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  L5    WRITE R3 0           /* line 9 */
	2.        WRITE R1 0           /* line 10 */
	3.        HALT 
**************************


